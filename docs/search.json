[
  {
    "objectID": "index.html#book-structure",
    "href": "index.html#book-structure",
    "title": "Reproducible R",
    "section": "Book Structure",
    "text": "Book Structure\nIt’s also the goal of this book to provide you with the minimal skill-set required to create reproducible analyses in R and will purposefully not be a deep dive into any one topic. Each chapter/topic in this book will provide you with a foundational understanding so that you can easily build you knowledge base and confidently explore any one topic in more detail. I will also include references when applicable for each topic to help guide deeper explorations.\nEach chapter/topic will include the following:\n\nA (often silly) story to help conceptualize the importance of each topic.\nAn overview of the topic geared towards R users that are new to reproducible analyses.\nMinimal code and/or working example to get you started."
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Reproducible R",
    "section": "License",
    "text": "License\nThis book is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 4.0 License.\nThe code samples in this book are licensed under Creative Commons CC0 1.0 Universal (CC0 1.0), i.e. public domain."
  },
  {
    "objectID": "preface.html#software-information",
    "href": "preface.html#software-information",
    "title": "Preface",
    "section": "Software Information",
    "text": "Software Information\nThis book was written using Quarto within the RStudio IDE with the follow session information:\n\nutils::sessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-apple-darwin21.1.0 (64-bit)\nRunning under: macOS Monterey 12.2.1\n\nMatrix products: default\nBLAS:   /usr/local/Cellar/openblas/0.3.18/lib/libopenblasp-r0.3.18.dylib\nLAPACK: /usr/local/Cellar/r/4.1.2/lib/R/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.1.2  magrittr_2.0.1  fastmap_1.1.0   htmltools_0.5.2\n [5] tools_4.1.2     stringi_1.7.4   rmarkdown_2.11  knitr_1.36     \n [9] stringr_1.4.0   xfun_0.25       digest_0.6.27   jsonlite_1.7.2 \n[13] rlang_0.4.11    renv_0.14.0     evaluate_0.14"
  },
  {
    "objectID": "preface.html#about-the-author",
    "href": "preface.html#about-the-author",
    "title": "Preface",
    "section": "About the Author",
    "text": "About the Author\nRyan is…"
  },
  {
    "objectID": "preface.html#acknowledgments",
    "href": "preface.html#acknowledgments",
    "title": "Preface",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nMy acknowledgements"
  },
  {
    "objectID": "chapters/sec1/your-r-env.html",
    "href": "chapters/sec1/your-r-env.html",
    "title": "Your R Environment",
    "section": "",
    "text": "Note\n\n\n\nA story about how environment can change the outcome (ice cream idea?)\n\n\n\nIn order to reproduce a workflow, a user must understand the environment in which the workflow resides.\nRunning R locally or on a shared server (e.g. RStudio Workbench)\nStep through the R startup:\n.Renviron/.Rprofile/.RData / .Rhistory"
  },
  {
    "objectID": "chapters/sec1/r-startup.html#startup-overview",
    "href": "chapters/sec1/r-startup.html#startup-overview",
    "title": "1  R Startup",
    "section": "1.1 Startup Overview",
    "text": "1.1 Startup Overview\nThe R startup process can be summarized in three steps:\n\nStart R\nSet environment variables\nSource Profile Scripts\n\n\n\n\n\n\n\n1.1.1 Start R\nR is initialized from your R_HOME directory which can be accessed by running the command R.home(component = \"home\") in your R session. Within the R_HOME/etc/ directory will be a file called Renviron. This file contains environment variables set by R in the configure process and should never be manually modified.\n\n\n1.1.2 Set Environment Variables\nYou can list the environment variables currently set in your active R session by running the command Sys.getenv(). These variables can affect the behavior of your R session and are initially set within the R_HOME/etc/Renviron file upon R startup.\nRenviron files are used to add or modify environment variables when starting R. Each line of an Renviron file should be in the form name=value:\nname1=value1\nname2=value2\nname3=value3\n\n\n\n\n\n\nImportant\n\n\n\nRenviron files do not contain R code! They are plain text files in the form of name=value\n\n\nIf you are running R on a server (e.g. RStudio Workbench), R will first look for a file defined by the R_ENVIRON environment variable. If that variable is not set, then R will next look for Renviron.site file within the R_HOME/etc/ directory. Changes to either of these files will alter all R sessions on the server.\nIf there are no server wide Renviron files, R will next search for user-level Renviron files, starting with a file defined the the R_ENVIRON_USER environment variable. If this variable is not set, R will first look for a .Renviron file file with the users working directory. Your working is the current directory where R will will look for and save files. It can be accessed by running getwd() and often referenced as . in R.\nIf a .Renviron file is not found within the working directory, R will next search a users home directory. This is the default working directory when R starts up and is often referenced as ~ in R.\n\n\n1.1.3 Source Profile Scripts\nUnlike Renviron files, RProfile files contain R code. There are no rules as to what can go in RProfile files, but it’s crucial to consider reproducibility. Before modifying an RProfile file, ask yourself “will this code be required to run my analysis?” If yes, then it’s recommended to not include it in the RProfile startup files.\nRProfile files follow a similar convention as Renviron files. If running R on a server, R first looks for a file pointed to by the R_PROFILE environment variable. If this is not set, then R will search for R_HOME/etc/RProfile.site. If neither of these are set, or if running R locally, then R will search for a .Rprofile file within the user’s working and home directories, respectively."
  },
  {
    "objectID": "chapters/sec1/r-startup.html#renviron",
    "href": "chapters/sec1/r-startup.html#renviron",
    "title": "1  R Startup",
    "section": "1.2 .Renviron",
    "text": "1.2 .Renviron\n\n1.2.1 What is the .Renviron file?\nThe .Renviron file is used for setting environment variables in your R session (e.g., GitHub Token, API keys). Each line of the .Renviron file should be in the form name=value:\nname1=value1\nname2=value2\nname3=value3\nCalling the Sys.getenv(\"name1\") function in your R session will return \"value1\"."
  },
  {
    "objectID": "chapters/sec1/r-startup.html#rprofile",
    "href": "chapters/sec1/r-startup.html#rprofile",
    "title": "1  R Startup",
    "section": "1.3 .Rprofile",
    "text": "1.3 .Rprofile\n\n1.3.1 What is the .Rprofile file?\nThe .Rprofile file…"
  },
  {
    "objectID": "chapters/sec1/r-startup.html#where-to-put-.renviron-and-.rprofile",
    "href": "chapters/sec1/r-startup.html#where-to-put-.renviron-and-.rprofile",
    "title": "1  R Startup",
    "section": "1.4 Where to put .Renviron and .Rprofile",
    "text": "1.4 Where to put .Renviron and .Rprofile\nIt is common to have multiple .Renviron and .Rprofile files on your system. You may have a single one of each in your home directory (Sys.getenv(\"R_HOME\")), and additional ones within various project directories. Upon startup, R will check the following paths for these files in order:\n\nIf set, the path encoded by the R_ENVIRON_USER or R_PROFILE_USER variables\n\nSys.getenv(\"R_ENVIRON_USER\")\nSys.getenv(\"R_PROFILE_USER\")\n\nYour current working directory: getwd()\nYour home directory: Sys.getenv(\"R_HOME\")\n\n\n\n\n\n\n\nImportant\n\n\n\nR first searches and executes .Renviron (if present) before sourcing .Rprofile."
  },
  {
    "objectID": "chapters/sec1/r-startup.html#other-startup-files",
    "href": "chapters/sec1/r-startup.html#other-startup-files",
    "title": "1  R Startup",
    "section": "1.2 Other startup files",
    "text": "1.2 Other startup files\nI leveraging R within RStudio Workbench or RStudio Server, your system administrator may have additional files configured to set default package repositories including rsession.conf and repos.conf. These files are scoped at the highest level, meaning if you make any changes to your default repositories in the Renviron or Rprofile files, these changes will override the conf files."
  }
]